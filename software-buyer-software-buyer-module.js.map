{"version":3,"sources":["./src/app/software-buyer/confirm-order/confirm-order.component.ts","./src/app/software-buyer/confirm-order/confirm-order.component.html","./src/app/software-buyer/confirm-order/confirm-order.service.ts","./src/app/software-buyer/create-order/create-order.component.ts","./src/app/software-buyer/create-order/create-order.component.html","./src/app/software-buyer/create-order/create-order.service.ts","./src/app/software-buyer/dashboard/dashboard.component.ts","./src/app/software-buyer/dashboard/dashboard.component.html","./src/app/software-buyer/order/order-cancel-dialog/order-cancel-dialog.component.ts","./src/app/software-buyer/order/order-cancel-dialog/order-cancel-dialog.component.html","./src/app/software-buyer/order/order.component.ts","./src/app/software-buyer/order/order.component.html","./src/app/software-buyer/order/order.service.ts","./src/app/software-buyer/profile/profile.component.ts","./src/app/software-buyer/profile/profile.component.html","./src/app/software-buyer/profile/profile.service.ts","./src/app/software-buyer/software-buyer-router.activate.ts","./src/app/software-buyer/software-buyer-routing.module.ts","./src/app/software-buyer/software-buyer.component.ts","./src/app/software-buyer/software-buyer.component.html","./src/app/software-buyer/software-buyer.module.ts","./src/app/software-buyer/software-buyer.service.ts"],"names":[],"mappings":"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","file":"software-buyer-software-buyer-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\nimport { ConfirmOrderService } from './confirm-order.service';\n\nimport { ConfirmOrderModel } from './confirm-order-model';\n\n@Component({\n  selector: 'app-confirm-order',\n  templateUrl: './confirm-order.component.html',\n  styleUrls: ['./confirm-order.component.css']\n})\nexport class ConfirmOrderComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public confirmOrderService: ConfirmOrderService\n  ) { }\n\n  public confirmOrderDetailSubscription: any;\n  public confirmOrderModel: ConfirmOrderModel = {\n    Id: 0,\n    OrderNumber: \"\",\n    OrderDate: \"\",\n    ProductCode: \"\",\n    ProductManualCode: \"\",\n    ProductDescription: \"\",\n    Remarks: \"\",\n    ProductPrice: 0,\n    Quantity: 0,\n    Amount: 0,\n    SellerUserName: \"\",\n    SellerFullName: \"\",\n    BuyerUserName: \"\",\n    BuyerFullName: \"\",\n    BuyerAddress: \"\",\n    BuyerContactNumber: \"\",\n    Status: \"\",\n  };\n\n  public confirmOrderSpinnerHidden: boolean = false;\n  public confirmOrderSpinnerContentHidden: boolean = true;\n\n  public confirmOrderDetail(): void {\n    let id: number = parseInt(this.activatedRoute.snapshot.paramMap.get('id'));\n\n    this.confirmOrderService.detaiConfirmOrder(id);\n    this.confirmOrderDetailSubscription = this.confirmOrderService.detailConfirmOrderObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.confirmOrderModel = {\n            Id: data.Id,\n            OrderNumber: data.OrderNumber,\n            OrderDate: data.OrderDate,\n            ProductCode: data.ProductCode,\n            ProductManualCode: data.ProductManualCode,\n            ProductDescription: data.ProductDescription,\n            Remarks: data.Remarks,\n            ProductPrice: data.ProductPrice,\n            Quantity: data.Quantity,\n            Amount: data.Amount,\n            SellerUserName: data.SellerUserName,\n            SellerFullName: data.SellerFullName,\n            BuyerUserName: data.BuyerUserName,\n            BuyerFullName: data.BuyerFullName,\n            BuyerAddress: data.BuyerAddress,\n            BuyerContactNumber: data.BuyerContactNumber,\n            Status: data.Status\n          };\n        }\n          \n        this.confirmOrderSpinnerHidden = true;\n        this.confirmOrderSpinnerContentHidden = false;\n\n        if (this.confirmOrderDetailSubscription != null) this.confirmOrderDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n\n  ngOnInit(): void {\n    this.confirmOrderDetail();\n  }\n\n  ngOnDestroy() {\n    if (this.confirmOrderDetailSubscription != null) this.confirmOrderDetailSubscription.unsubscribe();\n  }\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/order.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Confirm Order</span>\n</mat-toolbar>\n<div class=\"software-container\">\n    <div [hidden]=\"confirmOrderSpinnerHidden\">\n        <div style=\"width: 100%; text-align: center;\">\n            Please wait...\n        </div>\n        <br />\n        <mat-spinner class=\"spinner-center\"></mat-spinner>\n    </div>\n    <div [hidden]=\"confirmOrderSpinnerContentHidden\">\n        <div style=\"width: 100%; text-align: center;\">\n            <h1>Thank you!</h1>\n        </div>\n\n        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n            <div fxFlex=\"15\" style=\"margin: 5px;\"></div>\n            <div fxFlex=\"70\" style=\"margin: 5px;\">\n                <mat-card>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Order Number</b>\n                                <br />\n                                <span> {{confirmOrderModel.OrderNumber}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Order Date</b>\n                                <br />\n                                <span> {{confirmOrderModel.OrderDate}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"50\" style=\"margin: 5px;\"></div>\n                    </div>\n                    <mat-divider></mat-divider>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px; padding-top: 10px;\">\n                            <i>Product Details:</i>\n                            <br />\n                            <br />\n                            <p style=\"font-size: 23px; font-weight: bold;\">\n                                <b>{{confirmOrderModel.ProductDescription}}</b></p>\n                            <p style=\"font-size: 17px; margin-top: -5px;\"><b>Product Code: </b> &nbsp;\n                                {{confirmOrderModel.ProductManualCode}}</p>\n                        </div>\n                    </div>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Price</b>\n                                <br />\n                                <span> ₱ {{confirmOrderModel.ProductPrice}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Quantity</b>\n                                <br />\n                                <span> ₱ {{confirmOrderModel.Quantity}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n                            <p style=\"font-size: 15px;\">\n                                <b>Amount</b>\n                                <br />\n                                <span> ₱ {{confirmOrderModel.Amount}}</span>\n                            </p>\n                        </div>\n                        <div fxFlex=\"25\" style=\"margin: 5px;\">\n\n                        </div>\n                    </div>\n                    <mat-divider></mat-divider>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px; padding-top: 10px;\">\n                            <i>Remarks:</i>\n                            <br />\n                            <p style=\"font-size: 15px;\">\n                                <br />\n                                <span> {{confirmOrderModel.Remarks}}</span>\n                            </p>\n                        </div>\n                    </div>\n                    <mat-divider></mat-divider>\n                    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                        <div fxFlex=\"100\" style=\"margin: 5px; padding-top: 10px;\">\n                            <i>Shipping Address:</i>\n                            <br />\n                            <br />\n                            <p style=\"font-size: 15px;\">\n                                <b>Address</b>\n                                <br />\n                                <span> {{confirmOrderModel.BuyerAddress}}</span>\n                            </p>\n                            <p style=\"font-size: 15px;\">\n                                <b>Contact Number</b>\n                                <br />\n                                <span> {{confirmOrderModel.BuyerContactNumber}}</span>\n                            </p>\n                        </div>\n                    </div>\n                </mat-card>\n                <br />\n                <button routerLink=\"/software-buyer/order\" mat-flat-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\">\n                    OK\n                </button>\n            </div>\n            <div fxFlex=\"15\" style=\"margin: 5px;\"></div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ConfirmOrderModel } from './confirm-order-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmOrderService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public detailConfirmOrderSubject = new Subject<ConfirmOrderModel>();\n  public detailConfirmOrderObservable = this.detailConfirmOrderSubject.asObservable();\n\n  public detaiConfirmOrder(id: number): void {\n    let confirmOrderModel: ConfirmOrderModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/detail/confirmOrder/\" + id, this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          confirmOrderModel = {\n            Id: results[\"id\"],\n            OrderNumber: results[\"orderNumber\"],\n            ProductCode: results[\"productCode\"],\n            OrderDate: new Date(results[\"orderDate\"]).toLocaleDateString(\"fr-CA\"),\n            ProductManualCode: results[\"productManualCode\"],\n            ProductDescription: results[\"productDescription\"],\n            Remarks: results[\"remarks\"],\n            ProductPrice: results[\"productPrice\"],\n            Quantity: results[\"quantity\"],\n            Amount: results[\"amount\"],\n            SellerUserName: results[\"sellerUserName\"],\n            SellerFullName: results[\"sellerFullName\"],\n            BuyerUserName: results[\"buyerUserName\"],\n            BuyerFullName: results[\"buyerFullName\"],\n            BuyerAddress: results[\"buyerAddress\"],\n            BuyerContactNumber: results[\"buyerContactNumber\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.detailConfirmOrderSubject.next(confirmOrderModel);\n      },\n      error => {\n        this.detailConfirmOrderSubject.next(null);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CreateOrderService } from './create-order.service';\nimport { CreateOrderProductModel } from './create-order-product-model';\nimport { CreateOrderLoginUserModel } from './create-order-login-user-model';\n\nimport { AppSettings } from './../../app-settings';\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public createOrderService: CreateOrderService,\n    public appSettings: AppSettings,\n    private snackBar: MatSnackBar\n  ) { }\n\n  public price: string = \"0.00\";\n  public quantity: number = 1;\n  public amount: string = \"0.00\";\n\n  public loginUserDetailSubscription: any;\n  public loginUserModel: CreateOrderLoginUserModel = {\n    Id: 0,\n    UserType: \"\",\n    UserName: \"\",\n    Password: \"\",\n    FullName: \"\",\n    Address: \"\",\n    ContactNumber: \"\",\n    EmailAddress: \"\",\n    Status: \"\"\n  };\n\n  public productDetailSubscription: any;\n  public createOrderProductModel: CreateOrderProductModel = {\n    Id: 0,\n    ProductCode: \"\",\n    ProductManualCode: \"\",\n    ProductSKUCode: \"\",\n    ProductDescription: \"\",\n    Particulars: \"\",\n    ImageURL: \"\",\n    Price: 0,\n    SellerUserName: \"\",\n    SellerFullName: \"\",\n    Status: \"\",\n  };\n\n  public createOrderSpinnerHidden: boolean = false;\n  public productNotFoundHidden: boolean = true;\n  public createOrderSpinnerContentHidden: boolean = true;\n\n  public placeOrderSubscription: any;\n  public placeOrderRemarks: string = \"\";\n\n  public orderSpinnerStatus: string = \"Please wait...\";\n\n  public orderFormGroup: FormGroup;\n  public addressFormGroup: FormGroup;\n  public confirmFormGroup: FormGroup;\n\n  public isOrderFormGroupEditable: boolean = true;\n  public isAddressFormGroupEditable: boolean = true;\n  public isConfirmFormGroupEditable: boolean = true;\n\n  public buttonAddQuantityClick(): void {\n    this.quantity += 1;\n\n    this.computeAmount();\n  }\n\n  public buttonMinusQuantityClick(): void {\n    if (this.quantity > 1) {\n      this.quantity -= 1;\n    }\n\n    this.computeAmount();\n  }\n\n  public computeAmount(): void {\n    this.amount = (Math.round(this.createOrderProductModel.Price * this.quantity * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  public getLoginUserDetail(): void {\n    this.createOrderService.loginUser();\n    this.loginUserDetailSubscription = this.createOrderService.loginUserObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.loginUserModel = {\n            Id: data.Id,\n            UserType: data.UserType,\n            UserName: data.UserName,\n            Password: data.Password,\n            FullName: data.FullName,\n            Address: data.Address,\n            ContactNumber: data.ContactNumber,\n            EmailAddress: data.EmailAddress,\n            Status: data.Status\n          };\n        }\n\n        this.getProductDetail();\n\n        if (this.loginUserDetailSubscription != null) this.loginUserDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public getProductDetail(): void {\n    let productId = this.activatedRoute.snapshot.paramMap.get('productId');\n\n    this.createOrderService.detaiProduct(parseInt(productId));\n    this.productDetailSubscription = this.createOrderService.detailProductObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.createOrderProductModel = {\n            Id: data.Id,\n            ProductCode: data.ProductCode,\n            ProductManualCode: data.ProductManualCode,\n            ProductSKUCode: data.ProductSKUCode,\n            ProductDescription: data.ProductDescription,\n            Particulars: data.Particulars,\n            ImageURL: data.ImageURL,\n            Price: data.Price,\n            SellerUserName: data.SellerUserName,\n            SellerFullName: data.SellerFullName,\n            Status: data.Status\n          };\n\n          this.price = (Math.round(data.Price * 100) / 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n          this.amount = this.price;\n\n          this.createOrderSpinnerHidden = true;\n          this.createOrderSpinnerContentHidden = false;\n        } else {\n          this.createOrderSpinnerHidden = true;\n          this.productNotFoundHidden = false;\n        }\n\n        if (this.productDetailSubscription != null) this.productDetailSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonPlaceOrderClick(): void {\n    let productId: number = parseInt(this.activatedRoute.snapshot.paramMap.get('productId'));\n\n    let buttonPlaceOrder: Element = document.getElementById(\"buttonPlaceOrder\");\n    buttonPlaceOrder.setAttribute(\"disabled\", \"disabled\");\n\n    let orderData = {\n      Remarks: this.placeOrderRemarks,\n      Quantity: this.quantity,\n      BuyerAddress: this.loginUserModel.Address,\n      BuyerContactNumber: this.loginUserModel.ContactNumber\n    };\n\n    this.createOrderSpinnerHidden = false;\n    this.createOrderSpinnerContentHidden = true;\n\n    this.orderSpinnerStatus = \"Placing your order to the seller...\";\n\n    this.createOrderService.createOrder(productId, orderData);\n    this.placeOrderSubscription = this.createOrderService.createOrderObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          let id = data[1];\n\n          setTimeout(() => {\n            this.router.navigate(['/software-buyer/confirm-order/' + id]);\n          }, 500);\n        } else if (data[0] == \"failed\") {\n          this.createOrderSpinnerHidden = true;\n          this.createOrderSpinnerContentHidden = false;\n          buttonPlaceOrder.removeAttribute(\"disabled\");\n\n          this.snackBar.open(data[1], '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"orange-snackbar\"]\n          });\n        }\n\n        if (this.placeOrderSubscription != null) this.placeOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.getLoginUserDetail();\n  }\n\n  ngOnDestroy() {\n    if (this.productDetailSubscription != null) this.productDetailSubscription.unsubscribe();\n    if (this.loginUserDetailSubscription != null) this.loginUserDetailSubscription.unsubscribe();\n    if (this.placeOrderSubscription != null) this.placeOrderSubscription.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/order.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Create Order</span>\n</mat-toolbar>\n<div [hidden]=\"createOrderSpinnerHidden\">\n    <div class=\"software-container\">\n        <div style=\"width: 100%; text-align: center;\">\n            {{orderSpinnerStatus}}\n        </div>\n        <br />\n        <mat-spinner class=\"spinner-center\"></mat-spinner>\n    </div>\n</div>\n<div [hidden]=\"productNotFoundHidden\">\n    <div class=\"software-container\">\n        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n            <div fxFlex=\"35\"></div>\n            <div fxFlex=\"30\">\n                <div style=\"width: 100%; text-align: center;\">\n                    <img src=\"./../../../assets/dashboard-icons/error-404.png\" style=\"width: 100%;\" />\n                </div>\n            </div>\n            <div fxFlex=\"35\"></div>\n        </div>\n        <div style=\"width: 100%; text-align: center; font-size: 30px;\">\n            <p>Sorry. The product is not available or not found in the server. </p>\n        </div>\n    </div>\n</div>\n<div [hidden]=\"createOrderSpinnerContentHidden\">\n    <mat-horizontal-stepper linear #stepper>\n        <mat-step [stepControl]=\"orderFormGroup\" [editable]=\"isOrderFormGroupEditable\">\n            <ng-template matStepLabel>Order Product</ng-template>\n            <div class=\"software-container\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <h1><b>{{createOrderProductModel.ProductDescription}}</b></h1>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"35\" style=\"margin: 5px;\">\n                        <mat-card>\n                            <img src=\"{{createOrderProductModel.ImageURL}}\" style=\"width: 100%;\" />\n                        </mat-card>\n                    </div>\n                    <div fxFlex=\"65\"\n                        style=\"margin-top: 5px; margin-bottom: 5px; margin-left: 15px; margin-right: 15px;\">\n                        <h2><b>Product Code: </b> &nbsp; {{createOrderProductModel.ProductManualCode}}</h2>\n                        <p style=\"font-size: 15px;\">\n                            {{createOrderProductModel.Particulars}}\n                        </p>\n                        <p style=\"font-size: 15px;\">Sold by {{createOrderProductModel.SellerFullName}}</p>\n                        <h1>₱ {{price}}</h1>\n                        <mat-list style=\"margin-left: -16px !important; margin-top: -10px;\">\n                            <mat-list-item>\n                                <button mat-stroked-button (click)=\"buttonAddQuantityClick()\">\n                                    <mat-icon matSuffix>add</mat-icon>\n                                </button>\n                                <span style=\"font-size: 30px;\">\n                                    &nbsp;\n                                    {{quantity}}\n                                    &nbsp;\n                                </span>\n                                <button mat-stroked-button (click)=\"buttonMinusQuantityClick()\">\n                                    <mat-icon matSuffix>remove</mat-icon>\n                                </button>\n                            </mat-list-item>\n                        </mat-list>\n                        <br />\n                        <h2>Total: &nbsp; ₱ {{amount}}</h2>\n                        <br />\n                        <button mat-flat-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step [stepControl]=\"addressFormGroup\" [editable]=\"isAddressFormGroupEditable\">\n            <ng-template matStepLabel>Address and Contact No.</ng-template>\n            <div class=\"software-container\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\">\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Complete Address</mat-label>\n                                    <textarea [(ngModel)]=\"loginUserModel.Address\" [ngModelOptions]=\"{standalone: true}\"\n                                        matInput #text_compelete_address maxlength=\"1000\"\n                                        placeholder=\"eg., House/Bldg No., Street, Barangay, City, Country and Postal Code\"\n                                        rows=\"7\"></textarea>\n                                    <mat-icon matSuffix>edit_location</mat-icon>\n                                    <mat-hint align=\"end\">{{text_compelete_address.value.length}} / 1000</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Contact Number</mat-label>\n                                    <input [(ngModel)]=\"loginUserModel.ContactNumber\"\n                                        [ngModelOptions]=\"{standalone: true}\" matInput #text_contact_number\n                                        maxlength=\"1000\" placeholder=\"(+63) 9569863933\" />\n                                    <mat-icon matSuffix>phone</mat-icon>\n                                    <mat-hint align=\"end\">{{text_contact_number.value.length}} / 1000</mat-hint>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Email Address</mat-label>\n                                    <input [(ngModel)]=\"loginUserModel.EmailAddress\"\n                                        [ngModelOptions]=\"{standalone: true}\" matInput #text_email_address\n                                        maxlength=\"1000\" placeholder=\"(+63) 9569863933\" />\n                                    <mat-icon matSuffix>email</mat-icon>\n                                    <mat-hint align=\"end\">{{text_email_address.value.length}} / 1000</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div fxFlex=\"50\">\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Remarks (Optional): Notes to the seller. Eg., No onions.\n                                    </mat-label>\n                                    <input [(ngModel)]=\"placeOrderRemarks\" [ngModelOptions]=\"{standalone: true}\"\n                                        matInput #text_Remarks maxlength=\"1000\"\n                                        placeholder=\"Remarks (Optional): Notes to the seller. Eg., No onions.\" />\n                                    <mat-icon matSuffix>edit</mat-icon>\n                                    <mat-hint align=\"end\">{{text_Remarks.value.length}} / 1000</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <br />\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <button mat-stroked-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" matStepperPrevious>\n                            Back\n                        </button>\n                    </div>\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <button mat-flat-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step [stepControl]=\"confirmFormGroup\" [editable]=\"isConfirmFormGroupEditable\">\n            <ng-template matStepLabel>Confirm to Place Order</ng-template>\n            <div class=\"software-container\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"15\" style=\"margin: 5px;\"></div>\n                    <div fxFlex=\"70\" style=\"margin: 5px;\">\n                        <mat-card>\n                            <i>Product Details</i>\n                            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                    <br />\n                                    <h2><b>{{createOrderProductModel.ProductDescription}}</b></h2>\n                                    <p style=\"margin-top: -10px;\">\n                                        <b>Code:</b> &nbsp; {{createOrderProductModel.ProductManualCode}}\n                                    </p>\n                                </div>\n                            </div>\n                            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                <div fxFlex=\"30\" style=\"margin: 5px;\">\n                                    <b>Price</b><br />\n                                    <span>₱ {{price}}</span>\n                                </div>\n                                <div fxFlex=\"30\" style=\"margin: 5px;\">\n                                    <b>Quantity</b><br />\n                                    <span>{{quantity}}</span>\n                                </div>\n                                <div fxFlex=\"30\" style=\"margin: 5px;\">\n                                    <b>Amount</b><br />\n                                    <span>₱ {{amount}}</span>\n                                </div>\n                                <div fxFlex=\"10\" style=\"margin: 5px;\"></div>\n                            </div>\n                            <br />\n                            <mat-divider></mat-divider>\n                            <br />\n                            <i>Remarks</i>\n                            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                    <br />\n                                    {{placeOrderRemarks}}\n                                </div>\n                            </div>\n                            <br />\n                            <mat-divider></mat-divider>\n                            <br />\n                            <i>Ship To</i>\n                            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                <div fxFlex=\"100\" style=\"margin: 5px;\">\n                                    <br />\n                                    <b>Address</b><br />\n                                    <span>{{loginUserModel.Address}}</span>\n                                </div>\n                            </div>\n                            <br />\n                            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                                <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                    <b>Contact Number</b><br />\n                                    <span>{{loginUserModel.ContactNumber}}</span>\n                                </div>\n                                <div fxFlex=\"50\" style=\"margin: 5px;\">\n                                    <b>Email Address</b><br />\n                                    <span>{{loginUserModel.EmailAddress}}</span>\n                                </div>\n                            </div>\n                        </mat-card>\n                    </div>\n                    <div fxFlex=\"15\" style=\"margin: 5px;\"></div>\n                </div>\n                <br />\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <button mat-stroked-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" matStepperPrevious>\n                            Back\n                        </button>\n                    </div>\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <button mat-flat-button color=\"primary\" style=\"width: 100%; font-size: 20px; padding: 10px;\"\n                            id=\"buttonPlaceOrder\" (click)=\"buttonPlaceOrderClick()\" matStepperNext>\n                            Place Order\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </mat-step>\n    </mat-horizontal-stepper>\n</div>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { CreateOrderProductModel } from './create-order-product-model';\nimport { CreateOrderLoginUserModel } from './create-order-login-user-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateOrderService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public createOrderSubject = new Subject<string[]>();\n  public createOrderObservable = this.createOrderSubject.asObservable();\n  public loginUsertSubject = new Subject<CreateOrderLoginUserModel>();\n  public loginUserObservable = this.loginUsertSubject.asObservable();\n  public detailProductSubject = new Subject<CreateOrderProductModel>();\n  public detailProductObservable = this.detailProductSubject.asObservable();\n\n  public createOrder(productId: number, orderObjects: any): void {\n    let orderData = {\n      OrderNumber: \"0000000000\",\n      OrderDate: new Date(),\n      ProductCode: \"0000000000\",\n      ProductManualCode: \"0000000000\",\n      ProductSKUCode: \"0000000000\",\n      ProductDescription: \"NA\",\n      Remarks: orderObjects.Remarks,\n      ProductPrice: 0,\n      Quantity: orderObjects.Quantity,\n      Amount: 0,\n      SellerUserName: \"NA\",\n      SellerFullName: \"NA\",\n      BuyerUserName: \"NA\",\n      BuyerFullName: \"NA\",\n      BuyerAddress: orderObjects.BuyerAddress,\n      BuyerContactNumber: orderObjects.BuyerContactNumber,\n      Status: \"Open\",\n    };\n\n    this.httpClient.post(this.defaultAPIURLHost + \"/api/TrnOrder/createOrder/\" + productId, JSON.stringify(orderData), this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", response[\"id\"]];\n        this.createOrderSubject.next(responseResults);\n      },\n      error => {\n        let errorMessage = \"\";\n\n        if (error.error.errors != null) {\n          for (var errorField in error.error.errors) {\n            if (errorField != null) {\n              for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                errorMessage = error.error.errors[errorField][i];\n                break;\n              }\n            }\n          }\n        } else {\n          errorMessage = error[\"error\"];\n        }\n\n        let errorResults: string[] = [\"failed\", errorMessage];\n        this.createOrderSubject.next(errorResults);\n      }\n    );\n  }\n\n  public loginUser(): void {\n    let loginUserModel: CreateOrderLoginUserModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstUser/loginUser\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          loginUserModel = {\n            Id: results[\"id\"],\n            UserType: results[\"userType\"],\n            UserName: results[\"userName\"],\n            Password: results[\"password\"],\n            FullName: results[\"fullName\"],\n            Address: results[\"address\"],\n            ContactNumber: results[\"contactNumber\"],\n            EmailAddress: results[\"emailAddress\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.loginUsertSubject.next(loginUserModel);\n      },\n      error => {\n        this.loginUsertSubject.next(null);\n      }\n    );\n  }\n\n  public detaiProduct(id: number): void {\n    let productModel: CreateOrderProductModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstProduct/detail/\" + id, this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          productModel = {\n            Id: results[\"id\"],\n            ProductCode: results[\"productCode\"],\n            ProductManualCode: results[\"productManualCode\"],\n            ProductSKUCode: results[\"productSKUCode\"],\n            ProductDescription: results[\"productDescription\"],\n            Particulars: results[\"particulars\"],\n            ImageURL: results[\"imageURL\"],\n            Price: results[\"price\"],\n            SellerUserName: results[\"sellerUserName\"],\n            SellerFullName: results[\"sellerFullName\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.detailProductSubject.next(productModel);\n      },\n      error => {\n        this.detailProductSubject.next(null);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/dashboard.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Dashboard</span>\n</mat-toolbar>\n<div class=\"software-container\">\n    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n            <button routerLink=\"/software-buyer/order\" mat-stroked-button style=\"width: 100%; padding: 30px;\">\n                <img src=\"../../../assets/dashboard-icons/order.png\" height=\"100\" />\n                <br />\n                <br />\n                <span style=\"font-size: 25px;\">Orders</span>\n            </button>\n        </div>\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n            <button routerLink=\"/software-buyer/profile\" mat-stroked-button style=\"width: 100%; padding: 30px;\">\n                <img src=\"../../../assets/dashboard-icons/profile.png\" height=\"100\" />\n                <br />\n                <br />\n                <span style=\"font-size: 25px;\">Profile</span>\n            </button>\n        </div>\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n\n        </div>\n        <div fxFlex=\"25\" style=\"margin: 5px;\">\n\n        </div>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrderService } from '../order.service';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { AppSettings } from './../../../app-settings';\n\n@Component({\n  selector: 'app-order-cancel-dialog',\n  templateUrl: './order-cancel-dialog.component.html',\n  styleUrls: ['./order-cancel-dialog.component.css']\n})\nexport class OrderCancelDialogComponent implements OnInit {\n\n  constructor(\n    public orderCancelDialogComponent: MatDialogRef<OrderCancelDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public orderCancelDialogData: any,\n    public orderService: OrderService,\n    private snackBar: MatSnackBar,\n    public appSettings: AppSettings\n  ) { }\n\n  public dialogTitle: string = \"Cancel\";\n  public dialogContent: string = this.orderCancelDialogData.content;\n\n  public cancelOrderSubscription: any;\n\n  public buttonOrderCancelDialogCancelClick(): void {\n    let buttonOrderCancelDialogCancel: Element = document.getElementById(\"buttonOrderCancelDialogCancel\");\n    let buttonOrderCancelDialogClose: Element = document.getElementById(\"buttonOrderCancelDialogClose\");\n\n    buttonOrderCancelDialogCancel.setAttribute(\"disabled\", \"disabled\");\n    buttonOrderCancelDialogClose.setAttribute(\"disabled\", \"disabled\");\n\n    this.orderService.cancelOrder(this.orderCancelDialogData.orderData.Id);\n    this.cancelOrderSubscription = this.orderService.cancelOrderObservable.subscribe(\n      data => {\n        if (data[0] == \"success\") {\n          this.snackBar.open('Order no. ' + this.orderCancelDialogData.orderData.OrderNumber + ' was successfully cancelled!', '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"green-snackbar\"]\n          });\n\n          this.orderCancelDialogComponent.close(200);\n        } else if (data[0] == \"failed\") {\n          this.snackBar.open(data[1], '', {\n            duration: 3000,\n            horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n            verticalPosition: this.appSettings.snackBarVerticalPosition,\n            panelClass: [\"orange-snackbar\"]\n          });\n\n          buttonOrderCancelDialogCancel.removeAttribute(\"disabled\");\n          buttonOrderCancelDialogClose.removeAttribute(\"disabled\");\n        }\n\n        if (this.cancelOrderSubscription != null) this.cancelOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonOrderCancelDialogCloseClick(): void {\n    this.orderCancelDialogComponent.close(200);\n    if (this.cancelOrderSubscription != null) this.cancelOrderSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy() {\n    if (this.cancelOrderSubscription != null) this.cancelOrderSubscription.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n    {{ dialogTitle }}\n</h1>\n<div mat-dialog-content>\n    <p>{{ dialogContent }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"warn\" (click)=\"buttonOrderCancelDialogCancelClick()\"\n        id=\"buttonOrderCancelDialogCancel\">\n        <mat-icon matSuffix>cancel</mat-icon> Cancel\n    </button>\n    &nbsp;\n    <button mat-stroked-button (click)=\"buttonOrderCancelDialogCloseClick()\" id=\"buttonOrderCancelDialogClose\">\n        <mat-icon matSuffix>close</mat-icon> Close\n    </button>\n</div>","import { Component, OnInit, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\nimport { OrderCancelDialogComponent } from './order-cancel-dialog/order-cancel-dialog.component'\n\nimport { OpenOrderDataInterface } from './order-data-interface/open-order-data-interface';\nimport { VerifiedOrderDataInterface } from './order-data-interface/verified-order-data-interface';\nimport { CompletedOrderDataInterface } from './order-data-interface/completed-order-data-interface';\nimport { CancelledOrderDataInterface } from './order-data-interface/cancelled-order-data-interface';\n\nimport { OrderService } from \"./order.service\";\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor(\n    private orderService: OrderService,\n    private orderVerifyDialog: MatDialog,\n    private orderCancelDialog: MatDialog\n  ) { }\n\n  public openOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'SellerFullName',\n    'ButtonCancel'\n  ];\n  public openOrderDataSource: MatTableDataSource<OpenOrderDataInterface>;\n\n  @ViewChild('openOrderPaginator') public openOrderPaginator: MatPaginator;\n  @ViewChild('openOrderSort') public openOrderSort: MatSort;\n\n  public openOrderStartDateFilterFormControl = new FormControl(new Date());\n  public openOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listOpenOrderSubscription: any;\n  public openOrderData: OpenOrderDataInterface[] = []\n\n  public openOrderSpinnerHidden: boolean = false;\n  public openOrderSpinnerContentHidden: boolean = true;\n\n  public verifiedOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'SellerFullName'\n  ];\n  public verifiedOrderDataSource: MatTableDataSource<VerifiedOrderDataInterface>;\n\n  @ViewChild('verifiedOrderPaginator') public verifiedOrderPaginator: MatPaginator;\n  @ViewChild('verifiedOrderSort') public verifiedOrderSort: MatSort;\n\n  public verifiedOrderStartDateFilterFormControl = new FormControl(new Date());\n  public verifiedOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listVerifiedOrderSubscription: any;\n  public verifiedOrderData: VerifiedOrderDataInterface[] = []\n\n  public verifiedOrderSpinnerHidden: boolean = false;\n  public verifiedOrderSpinnerContentHidden: boolean = true;\n\n  public completedOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'SellerFullName'\n  ];\n  public completedOrderDataSource: MatTableDataSource<CompletedOrderDataInterface>;\n\n  @ViewChild('completedOrderPaginator') public completedOrderPaginator: MatPaginator;\n  @ViewChild('completedOrderSort') public completedOrderSort: MatSort;\n\n  public completedOrderStartDateFilterFormControl = new FormControl(new Date());\n  public completedOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listCompletedOrderSubscription: any;\n  public completedOrderData: CompletedOrderDataInterface[] = []\n\n  public completedOrderSpinnerHidden: boolean = false;\n  public completedOrderSpinnerContentHidden: boolean = true;\n\n  public cancelledOrderDisplayedColumns: string[] = [\n    'ButtonView',\n    'OrderNumber',\n    'OrderDate',\n    'ProductDescription',\n    'ProductPrice',\n    'Quantity',\n    'Amount',\n    'SellerFullName'\n  ];\n  public cancelledOrderDataSource: MatTableDataSource<CancelledOrderDataInterface>;\n\n  @ViewChild('cancelledOrderPaginator') public cancelledOrderPaginator: MatPaginator;\n  @ViewChild('cancelledOrderSort') public cancelledOrderSort: MatSort;\n\n  public cancelledOrderStartDateFilterFormControl = new FormControl(new Date());\n  public cancelledOrderEndDateFilterFormControl = new FormControl(new Date());\n\n  public listCancelledOrderSubscription: any;\n  public cancelledOrderData: CancelledOrderDataInterface[] = []\n\n  public cancelledOrderSpinnerHidden: boolean = false;\n  public cancelledOrderSpinnerContentHidden: boolean = true;\n\n  public listOpenOrder() {\n    let openOrderStartDateFilter: string = new Date(this.openOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let openOrderEndDateFilter: string = new Date(this.openOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.openOrderData = [];\n    this.openOrderDataSource = new MatTableDataSource(this.openOrderData);\n    this.openOrderDataSource.paginator = this.openOrderPaginator;\n    this.openOrderDataSource.sort = this.openOrderSort;\n\n    this.openOrderSpinnerHidden = false;\n    this.openOrderSpinnerContentHidden = true;\n\n    this.orderService.listOpenOrderData(openOrderStartDateFilter, openOrderEndDateFilter);\n    this.listOpenOrderSubscription = this.orderService.listOpenOrderObservable.subscribe(\n      data => {\n        this.openOrderSpinnerHidden = true;\n        this.openOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.openOrderData = data;\n          this.openOrderDataSource = new MatTableDataSource(this.openOrderData);\n          this.openOrderDataSource.paginator = this.openOrderPaginator;\n          this.openOrderDataSource.sort = this.openOrderSort;\n        }\n\n        if (this.listOpenOrderSubscription != null) this.listOpenOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public openOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listOpenOrder();\n  }\n\n  public applyOpenOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.openOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.openOrderDataSource.paginator) {\n      this.openOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewOpenOrderClick(openOrder: OpenOrderDataInterface): void {\n\n  }\n\n  public buttonCancelOpenOrderClick(openOrder: OpenOrderDataInterface): void {\n    const openOrderCancelDialog = this.orderCancelDialog.open(OrderCancelDialogComponent, {\n      width: '300px',\n      data: {\n        content: \"Cancel order no. \" + openOrder.OrderNumber + \"?\",\n        orderData: openOrder\n      },\n      disableClose: true\n    });\n\n    openOrderCancelDialog.afterClosed().subscribe(result => {\n      if (result == 200) {\n        this.listOpenOrder();\n        this.listCancelledOrder();\n      }\n    });\n  }\n\n  public listVerifiedOrder() {\n    let verifiedOrderStartDateFilter: string = new Date(this.verifiedOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let verifiedOrderEndDateFilter: string = new Date(this.verifiedOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.verifiedOrderData = [];\n    this.verifiedOrderDataSource = new MatTableDataSource(this.verifiedOrderData);\n    this.verifiedOrderDataSource.paginator = this.verifiedOrderPaginator;\n    this.verifiedOrderDataSource.sort = this.verifiedOrderSort;\n\n    this.verifiedOrderSpinnerHidden = false;\n    this.verifiedOrderSpinnerContentHidden = true;\n\n    this.orderService.listVerifiedOrderData(verifiedOrderStartDateFilter, verifiedOrderEndDateFilter);\n    this.listVerifiedOrderSubscription = this.orderService.listVerifiedOrderObservable.subscribe(\n      data => {\n        this.verifiedOrderSpinnerHidden = true;\n        this.verifiedOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.verifiedOrderData = data;\n          this.verifiedOrderDataSource = new MatTableDataSource(this.verifiedOrderData);\n          this.verifiedOrderDataSource.paginator = this.verifiedOrderPaginator;\n          this.verifiedOrderDataSource.sort = this.verifiedOrderSort;\n        }\n\n        if (this.listVerifiedOrderSubscription != null) this.listVerifiedOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public verifiedOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listVerifiedOrder();\n  }\n\n  public applyVerifiedOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.verifiedOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.verifiedOrderDataSource.paginator) {\n      this.verifiedOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewVerifiedOrderClick(verifiedOrder: VerifiedOrderDataInterface): void {\n\n  }\n\n  public listCompletedOrder() {\n    let completedOrderStartDateFilter: string = new Date(this.completedOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let completedOrderEndDateFilter: string = new Date(this.completedOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.completedOrderData = [];\n    this.completedOrderDataSource = new MatTableDataSource(this.completedOrderData);\n    this.completedOrderDataSource.paginator = this.completedOrderPaginator;\n    this.completedOrderDataSource.sort = this.completedOrderSort;\n\n    this.completedOrderSpinnerHidden = false;\n    this.completedOrderSpinnerContentHidden = true;\n\n    this.orderService.listCompletedOrderData(completedOrderStartDateFilter, completedOrderEndDateFilter);\n    this.listCompletedOrderSubscription = this.orderService.listCompletedOrderObservable.subscribe(\n      data => {\n        this.completedOrderSpinnerHidden = true;\n        this.completedOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.completedOrderData = data;\n          this.completedOrderDataSource = new MatTableDataSource(this.completedOrderData);\n          this.completedOrderDataSource.paginator = this.completedOrderPaginator;\n          this.completedOrderDataSource.sort = this.completedOrderSort;\n        }\n\n        if (this.listCompletedOrderSubscription != null) this.listCompletedOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public completedOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listCompletedOrder();\n  }\n\n  public applyCompletedOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.completedOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.completedOrderDataSource.paginator) {\n      this.completedOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewCompletedOrderClick(completedOrder: CompletedOrderDataInterface): void {\n\n  }\n\n  public listCancelledOrder() {\n    let cancelledOrderStartDateFilter: string = new Date(this.cancelledOrderStartDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n    let cancelledOrderEndDateFilter: string = new Date(this.cancelledOrderEndDateFilterFormControl.value).toLocaleDateString(\"fr-CA\");\n\n    this.cancelledOrderData = [];\n    this.cancelledOrderDataSource = new MatTableDataSource(this.cancelledOrderData);\n    this.cancelledOrderDataSource.paginator = this.cancelledOrderPaginator;\n    this.cancelledOrderDataSource.sort = this.cancelledOrderSort;\n\n    this.cancelledOrderSpinnerHidden = false;\n    this.cancelledOrderSpinnerContentHidden = true;\n\n    this.orderService.listCancelledOrderData(cancelledOrderStartDateFilter, cancelledOrderEndDateFilter);\n    this.listCancelledOrderSubscription = this.orderService.listCancelledOrderObservable.subscribe(\n      data => {\n        this.cancelledOrderSpinnerHidden = true;\n        this.cancelledOrderSpinnerContentHidden = false;\n\n        if (data.length > 0) {\n          this.cancelledOrderData = data;\n          this.cancelledOrderDataSource = new MatTableDataSource(this.cancelledOrderData);\n          this.cancelledOrderDataSource.paginator = this.cancelledOrderPaginator;\n          this.cancelledOrderDataSource.sort = this.cancelledOrderSort;\n        }\n\n        if (this.listCancelledOrderSubscription != null) this.listCancelledOrderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public cancelledOrderDateFiltersDateChange(type: string, event: MatDatepickerInputEvent<Date>): void {\n    this.listCancelledOrder();\n  }\n\n  public applyCancelledOrderFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.cancelledOrderDataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.cancelledOrderDataSource.paginator) {\n      this.cancelledOrderDataSource.paginator.firstPage();\n    }\n  }\n\n  public buttonPreviewCancelledOrderClick(cancelledOrder: CancelledOrderDataInterface): void {\n\n  }\n\n  ngOnInit() {\n    this.listOpenOrder();\n    this.listVerifiedOrder();\n    this.listCompletedOrder();\n    this.listCancelledOrder();\n  }\n\n  ngOnDestroy() {\n    if (this.listOpenOrderSubscription != null) this.listOpenOrderSubscription.unsubscribe();\n    if (this.listVerifiedOrderSubscription != null) this.listVerifiedOrderSubscription.unsubscribe();\n    if (this.listCompletedOrderSubscription != null) this.listCompletedOrderSubscription.unsubscribe();\n    if (this.listCancelledOrderSubscription != null) this.listCancelledOrderSubscription.unsubscribe();\n  }\n\n}","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/order.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Orders</span>\n</mat-toolbar>\n<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Open\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_open_order\"\n                            [formControl]=\"openOrderStartDateFilterFormControl\"\n                            [value]=\"openOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"openOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_open_order\"></mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_open_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_open_order\"\n                            [formControl]=\"openOrderEndDateFilterFormControl\"\n                            [value]=\"openOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"openOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_open_order\"></mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_open_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyOpenOrderFilter($event)\" type=\"text\" #text_filter_open_order\n                            maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_open_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"openOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"openOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"openOrderDataSource\" #openOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewOpenOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\">\n                                    {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"SellerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Seller\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.SellerFullName}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ButtonCancel\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\">\n                                    <button mat-flat-button color=\"warn\" style=\"width: 100%;\"\n                                        (click)=\"buttonCancelOpenOrderClick(row)\">\n                                        <mat-icon matSuffix>cancel</mat-icon> {{row.ButtonCancel}}\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" openOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: openOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"9\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_open_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #openOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Verified\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_verified_order\"\n                            [formControl]=\"verifiedOrderStartDateFilterFormControl\"\n                            [value]=\"verifiedOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"verifiedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_verified_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_verified_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_verified_order\"\n                            [formControl]=\"verifiedOrderEndDateFilterFormControl\"\n                            [value]=\"verifiedOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"verifiedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_verified_order\"></mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_verified_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyVerifiedOrderFilter($event)\" type=\"text\"\n                            #text_filter_verified_order maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_verified_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"verifiedOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"verifiedOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"verifiedOrderDataSource\" #verifiedOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewVerifiedOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\">\n                                    {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"SellerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Seller\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.SellerFullName}} </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" verifiedOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: verifiedOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"8\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_verified_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #verifiedOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Completed\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_completed_order\"\n                            [formControl]=\"completedOrderStartDateFilterFormControl\"\n                            [value]=\"completedOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"completedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_completed_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_completed_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_completed_order\"\n                            [formControl]=\"completedOrderEndDateFilterFormControl\"\n                            [value]=\"completedOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"completedOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_completed_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_completed_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyCompletedOrderFilter($event)\" type=\"text\"\n                            #text_filter_completed_order maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_completed_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"completedOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"completedOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"completedOrderDataSource\" #completedOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewCompletedOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\">\n                                    {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"SellerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Seller\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.SellerFullName}} </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" completedOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: completedOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"8\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_completed_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #completedOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Cancelled\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Start date</mat-label>\n                        <input matInput [matDatepicker]=\"start_date_picker_cancelled_order\"\n                            [formControl]=\"cancelledOrderStartDateFilterFormControl\"\n                            [value]=\"cancelledOrderStartDateFilterFormControl.value\"\n                            (dateChange)=\"cancelledOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"start_date_picker_cancelled_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #start_date_picker_cancelled_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"15\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>End date</mat-label>\n                        <input matInput [matDatepicker]=\"end_date_picker_cancelled_order\"\n                            [formControl]=\"cancelledOrderEndDateFilterFormControl\"\n                            [value]=\"cancelledOrderEndDateFilterFormControl.value\"\n                            (dateChange)=\"cancelledOrderDateFiltersDateChange('change', $event)\">\n                        <mat-datepicker-toggle matSuffix [for]=\"end_date_picker_cancelled_order\">\n                        </mat-datepicker-toggle>\n                        <mat-datepicker #end_date_picker_cancelled_order></mat-datepicker>\n                    </mat-form-field>\n                </div>\n                <div fxFlex=\"70\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Filter</mat-label>\n                        <input matInput (keyup)=\"applyCancelledOrderFilter($event)\" type=\"text\"\n                            #text_filter_cancelled_order maxlength=\"1000\" placeholder=\"Filter\">\n                        <mat-icon matSuffix>filter_alt</mat-icon>\n                        <mat-hint align=\"end\">{{text_filter_cancelled_order.value.length}} / 1000</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div [hidden]=\"cancelledOrderSpinnerHidden\">\n                <mat-spinner class=\"spinner-center\"></mat-spinner>\n            </div>\n            <div [hidden]=\"cancelledOrderSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"100\" style=\"margin: 5px;\">\n                        <mat-table [dataSource]=\"cancelledOrderDataSource\" #cancelledOrderSort=\"matSort\" matSort\n                            style=\"overflow-x: scroll;\">\n                            <ng-container matColumnDef=\"ButtonView\">\n                                <mat-header-cell fxFlex=\"90px\" *matHeaderCellDef mat-sort-header></mat-header-cell>\n                                <mat-cell fxFlex=\"90px\" *matCellDef=\"let row\">\n                                    <button mat-stroked-button matTooltip=\"Click to view order details.\"\n                                        [matTooltipPosition]=\"'left'\" style=\"width: 100%; background-color: white;\"\n                                        (click)=\"buttonPreviewCancelledOrderClick(row)\">\n                                        <mat-icon matSuffix>preview</mat-icon>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderNumber\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order No.\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderNumber}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"OrderDate\">\n                                <mat-header-cell fxFlex=\"100px\" *matHeaderCellDef mat-sort-header>Order Date\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"100px\" *matCellDef=\"let row\"> {{row.OrderDate}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductDescription\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Product</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.ProductDescription}} </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"ProductPrice\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Price</mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\">\n                                    {{row.ProductPrice}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Quantity\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Quantity\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Quantity}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"Amount\">\n                                <mat-header-cell fxFlex=\"80px\" *matHeaderCellDef mat-sort-header>Amount\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"80px\" *matCellDef=\"let row\" class=\"cell-align-right\"> {{row.Amount}}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"SellerFullName\">\n                                <mat-header-cell fxFlex=\"130px\" *matHeaderCellDef mat-sort-header>Seller\n                                </mat-header-cell>\n                                <mat-cell fxFlex=\"130px\" *matCellDef=\"let row\"> {{row.SellerFullName}} </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\" cancelledOrderDisplayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: cancelledOrderDisplayedColumns;\"></mat-row>\n\n                            <mat-cell *matNoDataRow>\n                                <td colspan=\"8\" style=\"padding: 15px;\">\n                                    No data matching the filter \"{{text_filter_cancelled_order.value}}\"\n                                </td>\n                            </mat-cell>\n                        </mat-table>\n\n                        <mat-paginator #cancelledOrderPaginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { OpenOrderDataInterface } from './order-data-interface/open-order-data-interface';\nimport { VerifiedOrderDataInterface } from './order-data-interface/verified-order-data-interface';\nimport { CompletedOrderDataInterface } from './order-data-interface/completed-order-data-interface';\nimport { CancelledOrderDataInterface } from './order-data-interface/cancelled-order-data-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public listOpenOrderSubject = new Subject<OpenOrderDataInterface[]>();\n  public listOpenOrderObservable = this.listOpenOrderSubject.asObservable();\n  public listVerifiedOrderSubject = new Subject<VerifiedOrderDataInterface[]>();\n  public listVerifiedOrderObservable = this.listVerifiedOrderSubject.asObservable();\n  public listCompletedOrderSubject = new Subject<CompletedOrderDataInterface[]>();\n  public listCompletedOrderObservable = this.listCompletedOrderSubject.asObservable();\n  public listCancelledOrderSubject = new Subject<CancelledOrderDataInterface[]>();\n  public listCancelledOrderObservable = this.listCancelledOrderSubject.asObservable();\n  public cancelOrderSubject = new Subject<string[]>();\n  public cancelOrderObservable = this.cancelOrderSubject.asObservable();\n\n  public listOpenOrderData(startDate: string, endDate: string): void {\n    let openOrderData: OpenOrderDataInterface[] = [];\n    this.listOpenOrderSubject.next(openOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perBuyerUser/\" + startDate + \"/\" + endDate + \"/Open\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            openOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: results[i].productPrice,\n              Quantity: results[i].quantity,\n              Amount: results[i].amount,\n              SellerFullName: results[i].sellerFullName,\n              ButtonCancel: \"Cancel\"\n            });\n          }\n        }\n\n        this.listOpenOrderSubject.next(openOrderData);\n      },\n      error => {\n        this.listOpenOrderSubject.next(openOrderData);\n      }\n    );\n  }\n\n  public listVerifiedOrderData(startDate: string, endDate: string): void {\n    let verifiedOrderData: VerifiedOrderDataInterface[] = [];\n    this.listVerifiedOrderSubject.next(verifiedOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perBuyerUser/\" + startDate + \"/\" + endDate + \"/Verified\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            verifiedOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: results[i].productPrice,\n              Quantity: results[i].quantity,\n              Amount: results[i].amount,\n              SellerFullName: results[i].sellerFullName\n            });\n          }\n        }\n\n        this.listVerifiedOrderSubject.next(verifiedOrderData);\n      },\n      error => {\n        this.listVerifiedOrderSubject.next(verifiedOrderData);\n      }\n    );\n  }\n\n  public listCompletedOrderData(startDate: string, endDate: string): void {\n    let completedOrderData: CompletedOrderDataInterface[] = [];\n    this.listCompletedOrderSubject.next(completedOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perBuyerUser/\" + startDate + \"/\" + endDate + \"/Completed\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            completedOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: results[i].productPrice,\n              Quantity: results[i].quantity,\n              Amount: results[i].amount,\n              SellerFullName: results[i].sellerFullName\n            });\n          }\n        }\n\n        this.listCompletedOrderSubject.next(completedOrderData);\n      },\n      error => {\n        this.listCompletedOrderSubject.next(completedOrderData);\n      }\n    );\n  }\n\n  public listCancelledOrderData(startDate: string, endDate: string): void {\n    let cancelledOrderData: CancelledOrderDataInterface[] = [];\n    this.listCancelledOrderSubject.next(cancelledOrderData);\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/TrnOrder/list/perBuyerUser/\" + startDate + \"/\" + endDate + \"/Cancelled\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results[\"length\"] > 0) {\n          for (let i = 0; i <= results[\"length\"] - 1; i++) {\n            cancelledOrderData.push({\n              ButtonView: \"View\",\n              Id: results[i].id,\n              OrderNumber: results[i].orderNumber,\n              OrderDate: new Date(results[i].orderDate).toLocaleDateString(\"fr-CA\"),\n              ProductDescription: results[i].productDescription,\n              ProductPrice: results[i].productPrice,\n              Quantity: results[i].quantity,\n              Amount: results[i].amount,\n              SellerFullName: results[i].sellerFullName\n            });\n          }\n        }\n\n        this.listCancelledOrderSubject.next(cancelledOrderData);\n      },\n      error => {\n        this.listCancelledOrderSubject.next(cancelledOrderData);\n      }\n    );\n  }\n\n  public cancelOrder(id: number): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/TrnOrder/cancel/\" + id, \"\", this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.cancelOrderSubject.next(responseResults);\n      },\n      error => {\n        let errorResults: string[] = [\"failed\", error[\"error\"]];\n        this.cancelOrderSubject.next(errorResults);\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ProfileService } from './profile.service';\nimport { ProfileUserModel } from './profile-user.model';\nimport { ProfileSecurityModel } from './profile-security.model';\n\nimport { AppSettings } from './../../app-settings';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public profileService: ProfileService,\n    public appSettings: AppSettings,\n    private snackBar: MatSnackBar\n  ) { }\n\n  public profileUserSubscription: any;\n  public profileUserModel: ProfileUserModel = {\n    Id: 0,\n    UserType: \"Buyer\",\n    UserName: localStorage.getItem('username'),\n    Password: \"NA\",\n    FullName: \"\",\n    Address: \"\",\n    ContactNumber: \"\",\n    EmailAddress: \"\",\n    Status: \"NA\"\n  };\n\n  public updateProfileUserSubscription: any;\n  public updateProfileSecuritySubscription: any;\n\n  public profileSecurityModel: ProfileSecurityModel = {\n    CurrentPassword: \"\",\n    NewPassword: \"\",\n    ConfirmPassword: \"\"\n  };\n\n  public profileSpinnerHidden: boolean = false;\n  public profileSpinnerContentHidden: boolean = true;\n\n  public getProfileUserData(): void {\n    this.profileService.profileUser();\n    this.profileUserSubscription = this.profileService.profileUserObservable.subscribe(\n      data => {\n        if (data != null) {\n          this.profileUserModel = {\n            Id: data.Id,\n            UserType: data.UserType,\n            UserName: data.UserName,\n            Password: \"NA\",\n            FullName: data.FullName,\n            Address: data.Address,\n            ContactNumber: data.ContactNumber,\n            EmailAddress: data.EmailAddress,\n            Status: data.Status\n          };\n        }\n\n        this.profileSpinnerHidden = true;\n        this.profileSpinnerContentHidden = false;\n\n        if (this.profileUserSubscription != null) this.profileUserSubscription.unsubscribe();\n      }\n    );\n  }\n\n  public buttonUpdateProfileClick(): void {\n    let buttonUpdateProfile: Element = document.getElementById(\"buttonUpdateProfile\");\n    buttonUpdateProfile.setAttribute(\"disabled\", \"disabled\");\n\n    let modelrrorMessage = \"\";\n    let isValid = false;\n\n    if (this.profileUserModel.FullName === \"\") {\n      modelrrorMessage = \"Full name is required.\";\n    } else if (this.profileUserModel.Address === \"\") {\n      modelrrorMessage = \"Address required.\";\n    } else if (this.profileUserModel.ContactNumber === \"\") {\n      modelrrorMessage = \"Contact number is required.\";\n    } else if (this.profileUserModel.EmailAddress === \"\") {\n      modelrrorMessage = \"Email address is required.\";\n    } else {\n      isValid = true;\n    }\n\n    if (isValid == false) {\n      this.snackBar.open(modelrrorMessage, '', {\n        duration: 3000,\n        horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n        verticalPosition: this.appSettings.snackBarVerticalPosition,\n        panelClass: [\"orange-snackbar\"]\n      });\n\n      buttonUpdateProfile.removeAttribute(\"disabled\");\n    } else {\n      this.profileService.updateProfile(this.profileUserModel);\n      this.updateProfileUserSubscription = this.profileService.updateProfileObservable.subscribe(\n        data => {\n          if (data[0] == \"success\") {\n            this.snackBar.open('Profile update successful.', '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"green-snackbar\"]\n            });\n          } else if (data[0] == \"failed\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n          }\n\n          buttonUpdateProfile.removeAttribute(\"disabled\");\n          if (this.updateProfileUserSubscription != null) this.updateProfileUserSubscription.unsubscribe();\n        }\n      );\n    }\n  }\n\n  public buttonUpdateSecurityClick(): void {\n    let buttonUpdateSecurity: Element = document.getElementById(\"buttonUpdateSecurity\");\n    buttonUpdateSecurity.setAttribute(\"disabled\", \"disabled\");\n\n    let modelrrorMessage = \"\";\n    let isValid = false;\n\n    if (this.profileSecurityModel.CurrentPassword === \"\") {\n      modelrrorMessage = \"Current password is required.\";\n    } else if (this.profileSecurityModel.NewPassword === \"\") {\n      modelrrorMessage = \"New password is required.\";\n    } else if (this.profileSecurityModel.ConfirmPassword === \"\") {\n      modelrrorMessage = \"Confirm password is required.\";\n    } else if (this.profileSecurityModel.NewPassword !== this.profileSecurityModel.ConfirmPassword) {\n      modelrrorMessage = \"New password and confirm password did not match.\";\n    } else {\n      isValid = true;\n    }\n\n    if (isValid == false) {\n      this.snackBar.open(modelrrorMessage, '', {\n        duration: 3000,\n        horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n        verticalPosition: this.appSettings.snackBarVerticalPosition,\n        panelClass: [\"orange-snackbar\"]\n      });\n\n      buttonUpdateSecurity.removeAttribute(\"disabled\");\n    } else {\n      this.profileService.updateSecurity(this.profileSecurityModel);\n      this.updateProfileSecuritySubscription = this.profileService.updateSecurityObservable.subscribe(\n        data => {\n          if (data[0] == \"success\") {\n            this.snackBar.open('Security update successful.', '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"green-snackbar\"]\n            });\n          } else if (data[0] == \"failed\") {\n            this.snackBar.open(data[1], '', {\n              duration: 3000,\n              horizontalPosition: this.appSettings.snackBarHorizontalPosition,\n              verticalPosition: this.appSettings.snackBarVerticalPosition,\n              panelClass: [\"orange-snackbar\"]\n            });\n          }\n\n          buttonUpdateSecurity.removeAttribute(\"disabled\");\n          if (this.updateProfileSecuritySubscription != null) this.updateProfileSecuritySubscription.unsubscribe();\n        }\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.getProfileUserData();\n  }\n\n  ngOnDestroy() {\n    if (this.profileUserSubscription != null) this.profileUserSubscription.unsubscribe();\n    if (this.updateProfileUserSubscription != null) this.updateProfileUserSubscription.unsubscribe();\n    if (this.updateProfileSecuritySubscription != null) this.updateProfileSecuritySubscription.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    <img src=\"../../../assets/dashboard-icons/profile.png\" height=\"35\" />\n    <span>&nbsp;&nbsp; Profile</span>\n    <span class=\"spacer\"></span>\n</mat-toolbar>\n<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"About\">\n        <div class=\"software-container\">\n            <div [hidden]=\"profileSpinnerHidden\">\n                <div class=\"software-container\">\n                    <div style=\"width: 100%; text-align: center;\">\n                        Please wait...\n                    </div>\n                    <br />\n                    <mat-spinner class=\"spinner-center\"></mat-spinner>\n                </div>\n            </div>\n            <div [hidden]=\"profileSpinnerContentHidden\">\n                <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Full Name</mat-label>\n                            <input matInput [(ngModel)]=\"profileUserModel.FullName\" [ngModelOptions]=\"{standalone: true}\"\n                                #text_full_name maxlength=\"250\" placeholder=\"\" />\n                            <mat-icon matSuffix>person</mat-icon>\n                            <mat-hint align=\"end\">{{text_full_name.value.length}} / 250</mat-hint>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                            <mat-label>Address</mat-label>\n                            <textarea matInput [(ngModel)]=\"profileUserModel.Address\" [ngModelOptions]=\"{standalone: true}\"\n                                #text_address maxlength=\"1000\" placeholder=\"\" rows=\"10\"></textarea>\n                            <mat-icon matSuffix>location_on</mat-icon>\n                            <mat-hint align=\"end\">{{text_address.value.length}} / 1000</mat-hint>\n                        </mat-form-field>\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin-right: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Contact Number</mat-label>\n                                    <input matInput [(ngModel)]=\"profileUserModel.ContactNumber\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_contact_number maxlength=\"250\"\n                                        placeholder=\"\" />\n                                    <mat-icon matSuffix>phone_iphone</mat-icon>\n                                    <mat-hint align=\"end\">{{text_contact_number.value.length}} / 250</mat-hint>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin-left: 5px;\">\n                                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Email Address</mat-label>\n                                    <input matInput [(ngModel)]=\"profileUserModel.EmailAddress\"\n                                        [ngModelOptions]=\"{standalone: true}\" #text_email_address maxlength=\"250\"\n                                        placeholder=\"\" />\n                                    <mat-icon matSuffix>email</mat-icon>\n                                    <mat-hint align=\"end\">{{text_email_address.value.length}} / 250</mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <br />\n                        <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                            <div fxFlex=\"50\" style=\"margin-right: 5px;\">\n                                <button mat-flat-button color=\"primary\"\n                                    style=\"width: 100%; padding-top: 10px; padding-bottom: 10px;\" id=\"buttonUpdateProfile\"\n                                    (click)=\"buttonUpdateProfileClick()\">\n                                    <mat-icon matSuffix>checkmark</mat-icon> Update\n                                </button>\n                            </div>\n                            <div fxFlex=\"50\" style=\"margin-left: 5px;\">\n    \n                            </div>\n                        </div>\n                    </div>\n                    <div fxFlex=\"50\" style=\"margin: 5px;\">\n    \n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Security\">\n        <div class=\"software-container\">\n            <div fxLayout=\"row\" fxLayout.xs=\"column\">\n                <div fxFlex=\"25\" style=\"margin: 5px;\">\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Username</mat-label>\n                        <input readonly matInput [(ngModel)]=\"profileUserModel.UserName\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_username maxlength=\"100\" placeholder=\"Username\">\n                        <mat-icon matSuffix>vpn_key</mat-icon>\n                        <mat-hint align=\"end\">{{text_username.value.length}} / 100</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Current Password</mat-label>\n                        <input type=\"password\" matInput [(ngModel)]=\"profileSecurityModel.CurrentPassword\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_current_password maxlength=\"250\"\n                            placeholder=\"\" />\n                        <mat-icon matSuffix>security</mat-icon>\n                        <mat-hint align=\"end\">{{text_current_password.value.length}} / 250</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput [(ngModel)]=\"profileSecurityModel.NewPassword\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_password maxlength=\"250\" placeholder=\"\" />\n                        <mat-icon matSuffix>security</mat-icon>\n                        <mat-hint align=\"end\">{{text_password.value.length}} / 250</mat-hint>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n                        <mat-label>Confirm Password</mat-label>\n                        <input type=\"password\" matInput [(ngModel)]=\"profileSecurityModel.ConfirmPassword\"\n                            [ngModelOptions]=\"{standalone: true}\" #text_confirm_password maxlength=\"250\"\n                            placeholder=\"\" />\n                        <mat-icon matSuffix>security</mat-icon>\n                        <mat-hint align=\"end\">{{text_confirm_password.value.length}} / 250</mat-hint>\n                    </mat-form-field>\n                    <br />\n                    <br />\n                    <button mat-flat-button color=\"primary\"\n                        style=\"width: 100%; padding-top: 10px; padding-bottom: 10px;\" id=\"buttonUpdateSecurity\"\n                        (click)=\"buttonUpdateSecurityClick()\">\n                        <mat-icon matSuffix>checkmark</mat-icon> Update\n                    </button>\n                </div>\n                <div fxFlex=\"75\" style=\"margin: 5px;\">\n\n                </div>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nimport { ProfileUserModel } from './profile-user.model';\nimport { ProfileSecurityModel } from './profile-security.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public profileUserSubject = new Subject<ProfileUserModel>();\n  public profileUserObservable = this.profileUserSubject.asObservable();\n\n  public updateProfileSubject = new Subject<string[]>();\n  public updateProfileObservable = this.updateProfileSubject.asObservable();\n  public updateSecuritySubject = new Subject<string[]>();\n  public updateSecurityObservable = this.updateSecuritySubject.asObservable();\n\n  public profileUser(): void {\n    let profileUserModel: ProfileUserModel = null;\n\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstUser/profile\", this.options).subscribe(\n      response => {\n        let results = response;\n\n        if (results != null) {\n          profileUserModel = {\n            Id: results[\"id\"],\n            UserType: results[\"userType\"],\n            UserName: results[\"userName\"],\n            Password: results[\"password\"],\n            FullName: results[\"fullName\"],\n            Address: results[\"address\"],\n            ContactNumber: results[\"contactNumber\"],\n            EmailAddress: results[\"emailAddress\"],\n            Status: results[\"status\"]\n          }\n        }\n\n        this.profileUserSubject.next(profileUserModel);\n      },\n      error => {\n        this.profileUserSubject.next(null);\n      }\n    );\n  }\n\n  public updateProfile(profileUserModel: ProfileUserModel): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/MstUser/profile/update\", JSON.stringify(profileUserModel), this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.updateProfileSubject.next(responseResults);\n      },\n      error => {\n        let errorMessage = \"\";\n\n        if (error.error.errors != null) {\n          for (var errorField in error.error.errors) {\n            if (errorField != null) {\n              for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                errorMessage = error.error.errors[errorField][i];\n                break;\n              }\n            }\n          }\n        } else {\n          errorMessage = error[\"error\"];\n        }\n\n        let errorResults: string[] = [\"failed\", errorMessage];\n        this.updateProfileSubject.next(errorResults);\n      }\n    );\n  }\n\n  public updateSecurity(profileSecurityModel: ProfileSecurityModel): void {\n    this.httpClient.put(this.defaultAPIURLHost + \"/api/MstUser/security/update\", JSON.stringify(profileSecurityModel), this.options).subscribe(\n      response => {\n        let responseResults: string[] = [\"success\", \"\"];\n        this.updateSecuritySubject.next(responseResults);\n      },\n      error => {\n        let errorMessage = \"\";\n\n        if (error.error.errors != null) {\n          for (var errorField in error.error.errors) {\n            if (errorField != null) {\n              for (let i = 0; i < error.error.errors[errorField].length; i++) {\n                errorMessage = error.error.errors[errorField][i];\n                break;\n              }\n            }\n          }\n        } else {\n          errorMessage = error[\"error\"];\n        }\n\n        let errorResults: string[] = [\"failed\", errorMessage];\n        this.updateSecuritySubject.next(errorResults);\n      }\n    );\n  }\n}\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from \"@angular/router\";\r\n\r\nimport { SoftwareBuyerService } from './software-buyer.service';\r\n\r\n@Injectable()\r\nexport class SoftwareBuyerRouterActivate implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        public softwareBuyerService: SoftwareBuyerService\r\n    ) { }\r\n\r\n    public isUserBuyerTypeSubscription: any;\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem(\"access_token\") == null) {\r\n            this.router.navigate([\"/account/login\"]);\r\n            return false;\r\n        } else {\r\n            if (localStorage.getItem(\"user_type\") == null) {\r\n                this.softwareBuyerService.getIsBuyerUserType();\r\n                this.isUserBuyerTypeSubscription = this.softwareBuyerService.isUserBuyerObservable.subscribe(\r\n                    data => {\r\n                        if (data == true) {\r\n                            return true;\r\n                        } else {\r\n                            this.router.navigate([\"/software-seller\"]);\r\n                            return false;\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                if (localStorage.getItem(\"user_type\") == \"Buyer\") {\r\n                    return true;\r\n                } else {\r\n                    this.router.navigate([\"/software-seller\"]);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.isUserBuyerTypeSubscription != null) this.isUserBuyerTypeSubscription.unsubscribe();\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SoftwareBuyerRouterActivate } from './software-buyer-router.activate';\n\nimport { SoftwareBuyerComponent } from './software-buyer.component';\nimport { DashboardComponent } from '../software-buyer/dashboard/dashboard.component';\nimport { OrderComponent } from '../software-buyer/order/order.component';\nimport { CreateOrderComponent } from '../software-buyer/create-order/create-order.component';\nimport { ConfirmOrderComponent } from '../software-buyer/confirm-order/confirm-order.component';\nimport { ProfileComponent } from '../software-buyer/profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [SoftwareBuyerRouterActivate],\n    component: SoftwareBuyerComponent,\n    children: [\n      { path: '', canActivate: [SoftwareBuyerRouterActivate], component: DashboardComponent },\n      { path: 'order', canActivate: [SoftwareBuyerRouterActivate], component: OrderComponent },\n      { path: 'create-order/:productId', canActivate: [SoftwareBuyerRouterActivate], component: CreateOrderComponent },\n      { path: 'confirm-order/:id', canActivate: [SoftwareBuyerRouterActivate], component: ConfirmOrderComponent },\n      { path: 'profile', canActivate: [SoftwareBuyerRouterActivate], component: ProfileComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SoftwareBuyerRoutingModule { }\n","import { Component, OnInit, ChangeDetectorRef, OnDestroy, ViewChild } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-software-buyer',\n  templateUrl: './software-buyer.component.html',\n  styleUrls: ['./software-buyer.component.css']\n})\nexport class SoftwareBuyerComponent implements OnInit {\n  public mobileQuery: MediaQueryList;\n  private _mobileQueryListener: () => void;\n  public currentUserName: string = localStorage.getItem('full_name');\n  public currentUserType: string = localStorage.getItem('user_type');\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private router: Router\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  public logOut(): void {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('username');\n    localStorage.removeItem('full_name');\n    localStorage.removeItem('user_type');\n\n    setTimeout(() => {\n      location.reload();\n    }, 500);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"main-container\" [class.main-is-mobile]=\"mobileQuery.matches\">\n    <mat-toolbar color=\"primary\" class=\"main-toolbar\">\n        <button mat-icon-button (click)=\"snav.toggle()\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <a routerLink=\"/software-buyer/\">\n            <img src=\"./../../assets/logo/orderfolder_white.png\" style=\"margin-top: 5px;\" height=\"20\" />\n        </a>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n        <mat-sidenav #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\" [fixedInViewport]=\"mobileQuery.matches\"\n            fixedTopGap=\"56\" opened class=\"sidenav\">\n\n            <mat-card style=\"margin: 15px;\">\n                <div style=\"text-align: center;\">\n                    <img src=\"../../assets/dashboard-icons/buyer.png\" height=\"60\" style=\"margin-bottom: 5px;\" />\n                    <br />\n                    <div style=\"text-overflow: ellipsis; overflow: hidden; width: 100%; height: 1.2em; white-space: nowrap; margin-bottom: 5px;\">\n                        <span style=\"font-size: 17.5px;\">{{currentUserName}}</span>\n                    </div>\n                    <div style=\"text-overflow: ellipsis; overflow: hidden; width: 100%; height: 1.2em; white-space: nowrap;\">\n                        {{currentUserType}}\n                    </div>\n                </div>\n            </mat-card>\n\n            <mat-nav-list>\n                <a mat-list-item routerLink=\"/software-buyer\">\n                    <img src=\"../../assets/dashboard-icons/dashboard.png\" height=\"30\" />\n                    &nbsp;&nbsp; Dashboard\n                </a>\n                <a mat-list-item routerLink=\"/software-buyer/order\">\n                    <img src=\"../../assets/dashboard-icons/order.png\" height=\"30\" />\n                    &nbsp;&nbsp; Orders\n                </a>\n                <a mat-list-item routerLink=\"/software-buyer/profile\">\n                    <img src=\"../../assets/dashboard-icons/profile.png\" height=\"30\" />\n                    &nbsp;&nbsp; Profile\n                </a>\n                <a mat-list-item (click)=\"logOut()\">\n                    <img src=\"../../assets/dashboard-icons/logout.png\" height=\"30\" />\n                    &nbsp;&nbsp; Logout\n                </a>\n            </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-sidenav-content>\n            <router-outlet></router-outlet>\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SoftwareBuyerRoutingModule } from './software-buyer-routing.module';\nimport { SoftwareBuyerRouterActivate } from './software-buyer-router.activate';\n\nimport { SoftwareBuyerComponent } from './software-buyer.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrderCancelDialogComponent } from './order/order-cancel-dialog/order-cancel-dialog.component';\nimport { CreateOrderComponent } from './create-order/create-order.component';\nimport { ConfirmOrderComponent } from './confirm-order/confirm-order.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    SoftwareBuyerComponent,\n    DashboardComponent,\n    OrderComponent,\n    OrderCancelDialogComponent,\n    CreateOrderComponent,\n    ProfileComponent,\n    ConfirmOrderComponent,\n  ],\n  entryComponents: [\n    OrderCancelDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SoftwareBuyerRoutingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatTabsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatDialogModule,\n    FlexLayoutModule\n  ],\n  providers: [\n    CdkColumnDef,\n    SoftwareBuyerRouterActivate\n  ]\n})\nexport class SoftwareBuyerModule { }\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from './../app-settings';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoftwareBuyerService {\n\n  constructor(\n    private appSettings: AppSettings,\n    private httpClient: HttpClient\n  ) { }\n\n  public defaultAPIURLHost: string = this.appSettings.APIURLHost;\n  public options: any = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n    })\n  };\n\n  public isUserBuyerTypeSubject = new Subject<boolean>();\n  public isUserBuyerObservable = this.isUserBuyerTypeSubject.asObservable();\n\n  public getIsBuyerUserType(): void {\n    this.httpClient.get(this.defaultAPIURLHost + \"/api/MstUser/userType\", this.options).subscribe(\n      response => {\n        let results = response;\n        if (results != null) {\n          if (results.toString() == \"Buyer\") {\n            this.isUserBuyerTypeSubject.next(true);\n          } else {\n            this.isUserBuyerTypeSubject.next(false);\n          }\n        } else {\n          this.isUserBuyerTypeSubject.next(false);\n        }\n      },\n      error => {\n        this.isUserBuyerTypeSubject.next(false);\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}